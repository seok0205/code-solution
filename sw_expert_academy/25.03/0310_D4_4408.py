'''
D4 4408 자기 방으로 돌아가기

숙소가 복도를 따라 400개의 방이 존재
1번 맞은편 2번, 1번방 오른쪽이 3번, 3번 맞은편이 4번, 3번 오른쪽이 5번... 형태로 배열되어있음

만약 두 사람이 자기방으로 돌아가는 도중에 지나는 복도의 구간이 겹치면 동시에 못드감
이동하는 데에는 거리 상관없이 단위 시간이 걸림

각 사람들의 방 위치와 돌아가야 할 방 위치 목록이 주어질 때, 최소 몇 단위 시간만에 모든 학생이 이동할 수 있는지 구하는 문제
'''

# import sys
# sys.stdin = open('tc.txt', 'r')

T = int(input())

for tc in range(1, T+1):
    N = int(input())
    move = [0] * 200        # 방은 400개지만, 두방이 마주보고 있기때문에 경로는 200칸이나 다름없음.
    
    for _ in range(N):
        a, b = map(int, input().split())        # 방 입력 받음
        
        if a > b:               # 만약 a에서 받은 방이 b보다 더크면 바꿔줌
            a, b = b, a
        
        for i in range((a-1)//2, (b-1)//2+1):       # 해당 이동 경로에 전부 1을 더해줌
            move[i] += 1
        
    print(f'#{tc} {max(move)}')     # 모든 a,b 값을 N번 받은 다음 최종 지나간 경로의 max 값이 최단 시간 값임