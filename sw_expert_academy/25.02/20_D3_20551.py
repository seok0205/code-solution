'''
D3 20551 증가하는 사탕 수열

세현이는 세 개의 상자를 나란히 세워 놓음. 첫번째 상자는 사탕 A, 두번째는 B, 세번째 상자에는 C개 듬
각 상자에 들어 있는 사탕 개수가 순증가하기를 원함
즉, 두 번째 상자에 들어 있는 사탕의 개수가 첫번째 상자에 들어있는 사탕의 개수보다 더 많기를 원하고,
세번째 상자에 든 사탕의 개수가 두번째 상자에 들어있는 사탕의 개수보다 더 많기를 원함
모든 상자가 비어있지 않아야함. 모든 상자에 사탕 하나씩 이상
조건을 만족시키려 먹어 없앨수 있음. 조건 만족위한 최소 사탕 섭취 개수 구하는 문제
'''

import sys
sys.stdin = open('tc.txt', 'r')

T = int(input())

for tc in range(1, T+1):
    A, B, C = map(int, input().split())
    result = 0

    if A and B and C and B > 1 and C > 2:   # 만약 A, B, C에 모두 사탕이있고, B가 2개이상, C가 3개이상일때, 이것이 최소조건. 1 2 3 이 조건을 만족하는 가장 최소의 조건
        while C <= B:       # 두번째 박스가 세번째박스의 사탕보다 많으면 B 하나씩 줄이면서 result 1씩 증가
            B -= 1
            result += 1
        
        while B <= A:       # 두번째와 세번째 박스 사이의 조건을 맞추고 첫번째와 두번째 조건을 맞춤.
            A -= 1
            result += 1
        print(f'#{tc} {result}')
    else:   # 최소조건도 맞추지 못한다면 -1 출력
        print(f'#{tc} -1')