'''
S4 1018 체스판 다시 칠하기

지민이는 자신의 저택에서 MN개 단위 정사각형으로 나누어져 있는 MxN보드를 찾음.
어떤 정사각형은 검은색, 나머지는 흰색으로 칠해져 있음.
지민이는 이 보드를 잘라 8x8 체스판으로 만들려고 함

체스판은 검은색 흰색이 번갈아 칠해져 있어야 함.
각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 함.
이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐. 맨 왼쪽위칸이 흰색인 경우와 검은색인 경우.

체스판처럼 칠해져 있다는 보장이 없어, 8x8 크기 체스판을 잘라낸 후 몇 개의 정사각형을 다시 칠하려고 함.
당연히 8x8크기는 아무데서나 골라도 됨. 지민이가 다시 칠해야할 정사각형 최소 개수 구하는 문제

입력:
N, M은 8보다 크거나 같고, 50보다 작거나 같은 자연수. 둘째줄부터 N개의 줄에는 보드의 각 행의 상태가 주어짐 B는 검은색, W는 흰색
'''

# import sys
# sys.stdin = open('tc.txt', 'r')

N, M = map(int, input().split())
board = [list(input()) for _ in range(N)]
result = float('inf')

paint_type = [['W', 'B', 'W', 'B', 'W', 'B', 'W', 'B'], ['B', 'W', 'B', 'W', 'B', 'W', 'B', 'W']]       # 체스판 구조는 이 두개가 번갈아서 나타남.

for i in range(N-7):                    # 체스판이 될 수 있는 경우의수는 8x8을 만족해야하므로 (0, 0)부터 (N-8, M-8)까지가 체스판 맨 왼쪽 끝점의 범위임.
    for j in range(M-7):
        change = 0                      # 첫번째 경우의 수일때 색 바꿔야할 횟수
        change_2 = 0                    # 두번째 경우의 수일때 색 바꿔야할 횟수

        for a in range(8):              # 맨 왼쪽 끝점을 정했다면, 8x8동안 돌아야함. idx는 두 경우의수를 나누는 식
            idx = a % 2                 # 0, 1, 0, 1
            idx_2 = (a+1) % 2           # 1, 0, 1, 0

            for b in range(8):
                if board[i+a][j+b] != paint_type[idx][b]:       # 다르면 색 바꿔야하므로 칠해야할 횟수 +1
                    change += 1
            
            for c in range(8):
                if board[i+a][j+c] != paint_type[idx_2][c]:
                    change_2 += 1
        
        result = min(result, change, change_2)          # 모두 탐색하면서 최솟값 비교

print(result)