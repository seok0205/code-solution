'''
G3 15685 드래곤 커브

드래곤 커브는 아래와 같은 세 가지 속성으로 이루어져 있음. 이차원 좌표 평면 위에서 정의됨. x축은 ->, y축은 ↓ 방향
1. 시작 점
2. 시작 방향
3. 세대

0세대 드래곤 커브는 길이가 1인 선분. (0, 0)에서 시작하는 0세대 드래곤 커브는
시작 방향이 오른쪽일 때, (0, 0)에서 (1, 0)

1세대 드래곤 커브는 0세대 드래곤 커브를 끝 점 기준으로 시계 방향으로 90도 회전시킨 다음 0세대 드래곤 커브의 끝 점에 붙인 것.
끝 점이란 시작 점에서 선분을 타고 이동했을 대, 가장 먼 거리에 있는 점 의미
(0, 0) -> (1, 0) -> (1, -1)

2세대 드래곤 커브도 1세대를 만든 방법 활용해 만들 수 있음
(0, 0) -> (1, 0) -> (1, -1) -> (0, -1) -> (0, -2)

3세대 드래곤 커브도 2세대 드래곤 커브 활용해 만들 수 있음
(0, 0) -> (1, 0) -> (1, -1) -> (0, -1) -> (0, -2) -> (-1, -2) -> (-1, -1) -> (-2, -1) -> (-2, -2)

즉, K세대 드래곤 커브는 K-1세대 드래곤 커브를 끝점 기준으로 90도 시계 방향 회전시킨 다음 그걸 끝점에 붙인 것.

크기 100x100 격자 위에 드래곤 커브 N개 존재. 이때, 크기가 1x1 정사각형의 네 꼭짓점이 모두 드래곤 커브의 일부인 정사각형 개수를 구하는 프로그램을 작성.
격자 좌표는 (x, y), 0 <= x, y <= 100만 유효한 좌표

입력:
N : 드래곤 커브 개수
N개의 줄에 드래곤 커브의 정보
x, y : 드래곤 커브의 시작점.
d : 시작 방향(0, 1, 2, 3 차례로 동 북 서 남)
g : 세대
'''

import sys
sys.stdin = open('tc.txt', 'r')

N = int(input())

for _ in range(N):
    x, y, d, g = map(int, input().split())

    