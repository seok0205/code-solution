'''
G5 1931 회의실 배정

한 개의 회의실이 있는데 이를 사용하고자 하는 N개의 회의에 대하여 회의실 사용표를 만들려고 함.
각 회의 I에 대해 시작시간, 끝시간이 주어지고, 각 회의가 겹치지 않게 하면서 회의실 사용할 수 있는 최대 개수 찾기.

단, 회의 시작 시 중단은 불가, 한 회의 끝남과 동시에 다음 회의 시작 가능.
회의 시작시간, 끝시간 같을 수 있음. 이경우 시작하자마자 끝난 것으로 생각.

입력:
N - 회의 수
둘째 줄부터 N+1줄까지 회의 정보 - 시작 시간 공백 끝 시간
시작 시간, 끝 시간은 2**31 - 1 보다 작거나 0.

출력:
첫째 줄에 최대 회의 개수 출력
'''

import sys
# sys.stdin = open('tc.txt', 'r')
input = sys.stdin.readline

N = int(input())
result = 0      # 배정가능 회의 수
time = []       # 요청 들어온 시간대

for _ in range(N):
    s, e = map(int, input().split())
    time.append((s, e))

time.sort(key=lambda x: (x[1], x[0]))       # 끝난 시간을 기준으로 처음 정렬을하고 끝난 시간이같으면 시작 시간 기준으로 정렬.

end = 0                         # 정렬 시, 끝난 시간이 같을 때 시작시간이 빠른 게 먼저 들어오게 되므로 시간이 최대한 비지 않는 경우의 수로 구할 수 있음. 끝나는 시간을 관리하는 변수 생성.
for x, y in time:
    if end <= x:                # 만약 끝난 시간보다 다음 탐색하는 시간대의 시작시간이 작으면 이미 지나버린 시작시간이라 회의를 시작 못함. 따라서 시작시간이 같거나 커야 회의 배정 가능.
        result += 1             # 회의 갯수 증가
        end = y                 # 해당 회의의 끝나는 시간 보관

print(result)

'''
27번 라인에서 시작시간과 끝시간이 같은 회의 시간대도 들어오는데, 이때 s == e 조건을 넣고 time리스트에 넣지않고 가능한 시간대라고 단정짓고 결과값 증가하는 로직을 넣었었음. 이것이 시간 오래 쓰게 된 실수.
34번줄의 로직만 해도 잘 구할 수 있는데..
'''