'''
0과 1로 이루어진 어떤 문자열 s에 대한 이진 변환을 아래와 같이 정의.

1. s의 모든 0을 제거.
2. s의 길이가 a이면, s를 'a를 2진법으로 표현한 문자열'로 바꾼다.

예로 s가 '01110'이면 01110 -> 111 -> 3 -> 11 -> 2 -> 10 -> 1가 된다.
이 과정에서 이진 변환의 횟수와 제거된 0의 개수를 구하는 문제.
'''

s = "110010101001"

result = [0, 0]

while True:
    if s == '1':    # 문자열이 '1'일 때 while문 중지.
        break

    result[1] += s.count('0')   # 0의 개수를 0이 제거된 횟수에 덧셈.
    s = s.replace('0', '')  # 0을 문자열에서 제거.
    s = bin(len(s)) # s의 길이인 정수를 이진법으로 변환.
    s = s[2:]   # 이진법 표현한 0b를 제외한 뒷자리만 s로 설정.

    result[0] += 1  # 이진변환횟수 +1

print(result)