'''
1,2번 참가자, 3,4번 참가자, 5,6번 참가자... n-1, n번째 참가자의 대진형태로 대결한다.
다음 판은 2번승리자가 승리했다면 다음 대결에 N/2번을 배정받아 1번이 되고,
5번 참가자가 승리했다면 반올림해서 3번에 배정받는다.
A,B 참가자는 라이벌 관계라 서로 만날때가지 절대 지지않는다.
A,B 참가자가 만났을 때 진행된 토너먼트 횟수를 구하는 문제.
'''

N = 64  # 참가자
A = 25  # A
B = 57  # B

round = 0   # 결승까지의 토너먼트 횟수.

for i in range(20): # N이 2의 20승 이하이기 때문에 토너먼트 최대횟수는 20회.
    if N_round == 1:    # 2로 나누고 1이 되면 결승이 진행되었다는 뜻. 중지
        break
    round += 1
    N_round = N_round//2    # 2를 한번 나눌 때 마다 토너먼트 횟수는 1회 증가.
    
for i in range(1, round+1):
    A = (A+1) // 2  # 1을더하고 2를 나눠야 1번 2번 모두 1, 1.5로 정수 부분이 1의 형태를 띔. 1을 더하지 않으면 1, 2의 경우 0.5와 1이 나와서 앞 정수부분이 달라 구분하기 어려워짐.
    B = (B+1) // 2

    if A == B:  # A와 B가 같으면 멈추고 i(진행된 토너먼트 수)를 출력.
        print(i)
        break